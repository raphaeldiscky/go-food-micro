name: CI

on:
  push:
    branches: ["main"]
    paths-ignore: ["*.md", "docs", "deploy", "config", ".github", "scripts"]

  pull_request:
    branches: ["main"]
    paths-ignore: ["*.md", "docs", "deploy", "config", ".github", "scripts"]

jobs:
  build:
    name: Build and Lint
    runs-on: ubuntu-latest
    outputs:
      go-cache-key: ${{ steps.go-mod-cache.outputs.cache-hit }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23.6"
          check-latest: true
          cache: true

      - name: Verify Go Version
        run: go version

      - name: Cache Go Modules
        uses: actions/cache@v4
        id: go-mod-cache
        with:
          path: |
            ~/go/pkg/mod
            ~/go/bin
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x
          repo-token: ${{ secrets.REPO_TOKEN }}

      - name: Install Formatting and Linting Tools
        if: steps.go-mod-cache.outputs.cache-hit != 'true'
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/HEAD/install.sh | sh -s -- -b $(go env GOPATH)/bin v2.1.6
          go install github.com/mgechev/revive@latest
          go install honnef.co/go/tools/cmd/staticcheck@latest
          go install github.com/kisielk/errcheck@latest

      - name: Install Project Dependencies
        if: steps.go-mod-cache.outputs.cache-hit != 'true'
        run: task install_deps

      - name: Format and Lint Code
        run: task format

      - name: Build Project
        run: task build

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23.6"
          check-latest: true
          cache: true

      - name: Cache Go Modules
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/go/bin
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x
          repo-token: ${{ secrets.REPO_TOKEN }}

      - name: Run Unit Tests
        run: task unit_test

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: build
    # Uncomment the following line when integration tests are ready
    # if: github.event_name == 'push' || github.event_name == 'pull_request'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23.6"
          check-latest: true
          cache: true

      - name: Cache Go Modules
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/go/bin
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x
          repo-token: ${{ secrets.REPO_TOKEN }}

      # TODO: Remove this skip condition when integration tests are ready
      - name: Skip Integration Tests (Placeholder)
        run: echo "⏭️ Integration tests are not yet implemented"

      # Uncomment when ready:
      # - name: Run Integration Tests
      #   run: task integration_test

  e2e-tests:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    needs: [build, unit-tests]
    # Uncomment the following line when E2E tests are ready
    # if: github.event_name == 'push' || github.event_name == 'pull_request'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23.6"
          check-latest: true
          cache: true

      - name: Cache Go Modules
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/go/bin
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x
          repo-token: ${{ secrets.REPO_TOKEN }}

      # TODO: Remove this skip condition when E2E tests are ready
      - name: Skip E2E Tests (Placeholder)
        run: echo "⏭️ E2E tests are not yet implemented"

      # Uncomment when ready:
      # - name: Run E2E Tests
      #   run: task e2e_test

  report-status:
    name: Report CI Status
    runs-on: ubuntu-latest
    needs: [build, unit-tests, integration-tests, e2e-tests]
    if: always()

    steps:
      - name: Report Overall Status
        run: |
          echo "## CI Results Summary"
          echo "- Build: ${{ needs.build.result }}"
          echo "- Unit Tests: ${{ needs.unit-tests.result }}"
          echo "- Integration Tests: ${{ needs.integration-tests.result }}"
          echo "- E2E Tests: ${{ needs.e2e-tests.result }}"

          if [[ "${{ needs.build.result }}" == "success" && 
                "${{ needs.unit-tests.result }}" == "success" && 
                "${{ needs.integration-tests.result }}" == "success" && 
                "${{ needs.e2e-tests.result }}" == "success" ]]; then
            echo "✅ All CI checks passed successfully!"
          else
            echo "❌ Some CI checks failed. Please review the individual job logs."
            exit 1
          fi
