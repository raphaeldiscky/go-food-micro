name: CI

on:
  push:
    branches: ["main"]
    paths-ignore: ["*.md", "docs", "deploy", "config", ".github", "scripts"]

  pull_request:
    branches: ["main"]
    paths-ignore: ["*.md", "docs", "deploy", "config", ".github", "scripts"]

jobs:
  build-test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22.x" # Latest stable version as of March 2024
          check-latest: true
          cache: true # Enable Go's built-in caching

      - name: Verify Go Version
        run: go version

      # Cache Go modules and tools
      - name: Cache Go Modules
        uses: actions/cache@v4 # Using stable v4 instead of preview
        id: go-mod-cache
        with:
          path: |
            ~/go/pkg/mod
            ~/go/bin
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x
          repo-token: ${{ secrets.REPO_TOKEN }}

      - name: Install Formatting and Linting Tools
        if: steps.go-mod-cache.outputs.cache-hit != 'true'
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/HEAD/install.sh | sh -s -- -b $(go env GOPATH)/bin v2.1.6
          go install github.com/mgechev/revive@latest
          go install honnef.co/go/tools/cmd/staticcheck@latest
          go install github.com/kisielk/errcheck@latest

      - name: Install Project Dependencies
        if: steps.go-mod-cache.outputs.cache-hit != 'true'
        run: task install_deps

      - name: Format and Lint Code
        run: task format
        continue-on-error: false

      - name: Build Project
        run: task build
        continue-on-error: false # Fail if build fails

      - name: Run Unit Tests
        run: task unit_test
        continue-on-error: false # Fail if unit tests fail

      - name: Run Integration Tests
        run: task integration_test
        continue-on-error: false # Fail if integration tests fail
        # Note: Integration tests might fail in CI due to testcontainers issues
        # Consider adding a condition to skip these in CI if needed

      - name: Run End-to-End Tests
        run: task e2e_test
        continue-on-error: false # Fail if e2e tests fail
        # Note: E2E tests might require additional setup
        # Consider adding a condition to skip these in CI if needed

      # Add a final step to report job status
      - name: Report Job Status
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "✅ All checks passed successfully"
          else
            echo "❌ Some checks failed. Please review the logs above."
            exit 1
          fi
