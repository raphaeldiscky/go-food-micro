name: "go-food-micro"

services:
  # prometheus dashboard: http://localhost:9090
  # prometheus internal metrics: http://localhost:9090/metrics
  # https://prometheus.io/docs/prometheus/latest/getting_started/
  # https://prometheus.io/docs/guides/go-application/
  prometheus:
    env_file: "monitoring.env"
    image: prom/prometheus:v3.3.1
    pull_policy: if_not_present
    container_name: prometheus
    restart: unless-stopped
    user: root
    ports:
      - ${PROMETHEUS_HOST_PORT:-9090}:${PROMETHEUS_PORT:-9090}
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    healthcheck:
      interval: 5s
      retries: 10
      test: wget --no-verbose --tries=1 --spider http://localhost:9090/status || exit 1
    networks:
      - go-food-micro

  grafana:
    env_file: "monitoring.env"
    image: grafana/grafana:11.6.1
    pull_policy: if_not_present
    container_name: grafana
    restart: unless-stopped
    volumes:
      - ./monitoring/grafana.yaml:/etc/grafana/provisioning/datasources/datasource.yaml
      - ./monitoring/grafana-bootstrap.ini:/etc/grafana/grafana.ini
    ports:
      - ${GRAFANA_HOST_PORT:-3000}:${GRAFANA_PORT:-3000}
    environment:
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor
    healthcheck:
      interval: 5s
      retries: 10
      test: wget --no-verbose --tries=1 --spider http://localhost:3000 || exit 1
    depends_on:
      prometheus:
        condition: service_healthy
      tempo:
        condition: service_healthy
    networks:
      - go-food-micro

  # https://grafana.com/docs/tempo/latest/getting-started/
  # https://github.com/grafana/tempo/blob/main/example/docker-compose/local/docker-compose.yaml
  # https://github.com/Domoryonok/tracing_demo/blob/master/grafana/docker-compose.yaml
  # https://grafana.com/docs/grafana/latest/datasources/jaeger/
  # https://grafana.com/docs/tempo/latest/operations/architecture/
  tempo:
    env_file: "monitoring.env"
    image: grafana/tempo:2.7.2
    command: ["-config.file=/etc/tempo.yaml"]
    volumes:
      - ./otelcollector/tempo.yaml:/etc/tempo.yaml
    ports:
      - "3200:3200" # tempo UI
      - "4322:4317" # otlp grpc
      - "9411" # zipkin - export zipkin traces to tempo
      - "14268" # jaeger - export jaeger traces to tempo
    healthcheck:
      interval: 5s
      retries: 10
      test: wget --no-verbose --tries=1 --spider http://localhost:3200/status || exit 1
    networks:
      - go-food-micro

  # https://www.jaegertracing.io/docs/2.6/apis/#opentelemetry-protocol-stable
  # https://www.jaegertracing.io/docs/2.6/deployment/
  # https://www.jaegertracing.io/docs/2.6/getting-started/
  # https://opentelemetry.io/docs/instrumentation/go/exporters/
  # https://opentelemetry.io/docs/specs/otlp/
  jaeger:
    env_file: "monitoring.env"
    image: jaegertracing/jaeger:2.6.0
    container_name: jaeger
    pull_policy: if_not_present
    restart: unless-stopped
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
      - COLLECTOR_OTLP_ENABLED=true
      # Store metrics in PROMETHEUS storage instead of in-memory storage
      - METRICS_STORAGE_TYPE=prometheus
      - PROMETHEUS_SERVER_URL=http://prometheus:9090
    #      # Jaeger uses Elasticsearch as span storage instead of in-memory storage
    #      - SPAN_STORAGE_TYPE=elasticsearch
    #      - ES_SERVER_URLS=http://elastic_search:${ELASTIC_PORT:-9200}
    #      - ES_VERSION=8
    ports:
      - "16686:16686" # Jaeger UI port
      - "4320:4317" # OTLP gRPC default port - for prevent duplicate expose this port that will expose also by `otel-collector` we not expose it on `4317` - `4320` could use by the app through otlptracegrpc
      - "4321:4318" # OTLP Http default port - for prevent duplicate expose this port that will expose also by `otel-collector` we not expose it on `4318` - `4321` could use by the app through otlptracehttp
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:16686",
        ]
      interval: 10s
      retries: 3
      timeout: 10s
    networks:
      - go-food-micro

networks:
  go-food-micro:
    name: go-food-micro
